
<launch>
<!-- Launch file for Livox AVIA LiDAR -->

	<!-- <arg name="rviz" default="true" /> -->
	<arg name="use_sim_time" value="false"/>
	<arg name="map" default="$(find fast_lio)/PCD/honglu.pcd" />

	<!-- Point-lio -->
	<node pkg="point_lio" type="pointlio_mapping" name="laserMapping" output="screen">
	<rosparam command="load" file="$(find point_lio)/config/mid360.yaml" />
	<param name="use_imu_as_input" type="bool" value="1"/> <!--change to 1 to use IMU as input of Point-LIO-->
	<param name="prop_at_freq_of_imu" type="bool" value="1"/>
	<param name="check_satu" type="bool" value="1"/>
	<param name="init_map_size" type="int" value="10"/>
	<param name="point_filter_num" type="int" value="1"/> <!--4, 3--> 
	<param name="space_down_sample" type="bool" value="1" />  
	<param name="filter_size_surf" type="double" value="0.3" /> <!--0.5, 0.3, 0.2, 0.15, 0.1--> 
	<param name="filter_size_map" type="double" value="0.2" /> <!--0.5, 0.3, 0.15, 0.1-->
	<param name="cube_side_length" type="double" value="2000" /> <!--1000-->
	<param name="runtime_pos_log_enable" type="bool" value="0" /> <!--1-->
	</node>




	<!-- loalization-->
    <node pkg="fast_lio_localization" type="global_localization_Pointlio.py" name="global_localization" output="screen" />

	<!-- transform  fusion-->
    <node pkg="fast_lio_localization" type="transform_fusion_Pointlio.py" name="transform_fusion" output="screen" />

	<!-- glbal map-->
    <node pkg="pcl_ros" type="pcd_to_pointcloud" name="map_publishe" output="screen"
		  args="$(arg map) 5 _frame_id:=map cloud_pcd:=map" />

	<!-- <group if="$(arg rviz)">
	<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find fast_lio_localization)/rviz_cfg/localization.rviz" />
	</group> -->

	<!-- load 2d map -->
	<arg name="2dmap" default="honglu.yaml" />
	<node name = "map_server" pkg = "map_server" type = "map_server" args="$(find fast_lio)/PCD/honglu.yaml /map:=prior_map"/>

	<!-- pointscloud2 to laserscans -->
	<include file="$(find fast_lio_localization)/launch/PointsCloud2toLaserscan.launch">
	</include>

	<!-- 发布一个雷达body到机器人足端body_foot的静态映射 -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="tf_pub_1" args="-0.12 0 0 0 0 0 aft_mapped body_foot" />
	<!-- 发布一个雷达初始位置camera_init到机器人足端初始位置body_init的静态映射 -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="tf_pub_2" args="-0.12 0 0 0 0 0 camera_init robot_foot_init" />
	<!-- 发布一个雷达初始位置camera_init到map的静态映射 -->
	<!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_pub_3" args="0 0 0 0 0 0 map camera_init" /> -->


</launch>
